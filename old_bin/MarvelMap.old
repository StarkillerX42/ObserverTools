#!/bin/bash
#------------------------------------------------------------------------------
# 
# Generate plPlugMapM files, if a plate are dual pointing one, it will generate plPlugMapM files for both pointing. If the a plate is B-side only one, it will generate plPlugMapM file for B pointing only (ingore plPlugP file for A pointing). 
#
#  Kaike Pan, APO.
#------------------------------------------------------------------------------

# Test that the user is logged in as the user "mapper".
if ! `whoami | grep -q mapper` ; then
  echo "FAILED! You must be logged in as 'mapper', not as '"`whoami`"'."
  exit 1
fi

# Query for the plugger's name(s), the plate number, cartID
echo -n 'Enter your last name(s): '
read plugger
echo -n 'Enter plate number: '
read platenum anyExtras
echo -n 'Enter cartridge ID:'
read cartID
#confirm inputs are correct.
echo "you enter " $platenum "for plateID," $cartID "for cartridge number."
echo -n "please confirm. yes to continue, no to quit.    "
read rightinput
if [ $rightinput != "yes" ]; then
   exit 1
fi
#set Bsideonly to be false
Bsideonly=no
# ask input on if a plate is a SideB only plate'
echo "Is this plate a B-side-only plate?"
read answer
if [ $answer = "yes" ]; then
   Bsideonly=yes
fi

echo "  "
# We always use the new "i" mode now instead of "s", "f", or "e"
# echo -n 'Slow (s), fast (f), or extreme (e) mode? '
# read mode anyExtras
mode=i

if test -z "$PLATELIST_DIR"; then
    echo "platelist product must be setup"
    exit 1
fi

# Find the input plugmap
platenum06=$(printf '%06d' $platenum)
plugdir="$PLATELIST_DIR/plates/$(echo $platenum06 | perl -ape 's:..$:XX:')/$platenum06"
#
if test ! -d $plugdir; then
    echo "input plPlugMapP directory $plugdir is not valid"
fi
mjd=`sloanmjd`

# Generate plPlugMapM file for A pointing, and save it in /export/home/mapperM/mjd
#first check if the direct exist, if not, create one
if test ! -d "/export/home/mapper/scan"/$mjd; then
   mkdir "/export/home/mapper/scan"/$mjd
fi
svdir="/export/home/mapper/scan/"$mjd

PfilenameA="plPlugMapP-"$platenum".par"
if test ! -f $plugdir/$PfilenameA; then 
   echo "plPlugMapP file doesn't exit"
   exit 1
else cp $plugdir/$PfilenameA . 
fi

PfilenameB="plPlugMapP-"$platenum"B.par"
if test -f $plugdir/$PfilenameB; then
   cp $plugdir/$PfilenameB .
   cmp -s $PfilenameA $PfilenameB
   diff=$?
   if [ $diff = 0 ]; then
       Bsideonly=yes
   fi
fi

if [ $Bsideonly = "yes" ]; then 
   # create MapM file for B pointing only plate

   awk  -v cartnum=$cartID -v PLUGGER=$plugger -v plate=$platenum -v MJD=$mjd 'BEGIN{} NR==1 {outname="plPlugMapM-"plate"-"MJD"-01B.par";} {print $0 > "temporary_partialfile.par";}/theta/{ print "fscanId      1" > "temporary_partialfile.par";  print "fscanMJD   " MJD > "temporary_partialfile.par"; print "pluggers " PLUGGER > "temporary_partialfile.par";  print "cartridgeId  "cartnum > "temporary_partialfile.par"; }END{  system("mv temporary_partialfile.par " outname); }'  $PfilenameB

   outfileB="plPlugMapM-"$platenum"-"$mjd"-01B.par"
   mv $outfileB $svdir
   loadPlPlugMapMFiles --file $svdir/$outfileB --active

   rm $PfilenameB
   exit

else
   awk  -v cartnum=$cartID -v PLUGGER=$plugger -v plate=$platenum -v MJD=$mjd 'BEGIN{} NR==1 {outname="plPlugMapM-"plate"-"MJD"-01.par";} {print $0 > "temporary_partialfile.par";}/theta/{ print "fscanId      1" > "temporary_partialfile.par";  print "fscanMJD   " MJD > "temporary_partialfile.par"; print "pluggers " PLUGGER > "temporary_partialfile.par";  print "cartridgeId  "cartnum > "temporary_partialfile.par"; }END{  system("mv temporary_partialfile.par " outname); }'  $PfilenameA

  outfile="plPlugMapM-"$platenum"-"$mjd"-01.par"
  mv $outfile $svdir
  loadPlPlugMapMFiles --file $svdir/$outfile --active

  rm $PfilenameA

  # create MapM file for B pointing
  PfilenameB="plPlugMapP-"$platenum"B.par"
  if test ! -f $plugdir/$PfilenameB; then 
     echo "plPlugMapP file for B pointing does not  exit"
     exit 1
  fi

  awk  -v cartnum=$cartID -v PLUGGER=$plugger -v plate=$platenum -v MJD=$mjd 'BEGIN{} NR==1 {outname="plPlugMapM-"plate"-"MJD"-01B.par";} {print $0 > "temporary_partialfile.par";}/theta/{ print "fscanId      1" > "temporary_partialfile.par";  print "fscanMJD   " MJD > "temporary_partialfile.par"; print "pluggers " PLUGGER > "temporary_partialfile.par";  print "cartridgeId  "cartnum > "temporary_partialfile.par"; }END{  system("mv temporary_partialfile.par " outname); }'  $PfilenameB

  outfileB="plPlugMapM-"$platenum"-"$mjd"-01B.par"
  mv $outfileB $svdir
  loadPlPlugMapMFiles --file $svdir/$outfileB --active

  rm $PfilenameB
fi


#!/usr/bin/env python
#
# This script calculates the best MANGA fiber to point at
#
# Use as:   whichMangaFiber -p 7815 -n   (usually 1st time)
#     or:   whichMangaFiber -p 7815      (next time for this plate)
#
# History:
#  16 dec 2016: written by dmbiz
#
# ask dmbiz

import time,string,os
#--import posix
import argparse
import glob
from math import sqrt
import numpy as np

w_dir = '/home/observer/tmp_scale/'

#======================================

def get_plates(pl):
  #-smjd = str( sjd() )
  spl = str(pl)
  h = 'observer@plate-mapper3:~mapper/scan/?????/plPlugMapM-' + pl + '*par'
  ret_code = os.system ('cd ' + w_dir + ' ; scp -q -p ' + h + ' .')
  if ret_code != 0:
    print 'ERROR: cannot copy files: try again'

def getFiles(f):
  files = glob.glob(f)
  return sorted(files)  

def get_pars(par):
  # get   survey,fiberid,x,y from the par file

  fi1 = open(par, 'r')
  inList = fi1.readlines()
  fi1.close()
  survey = []
  fiberid = []
  xp = []
  yp = []
  for st in inList:
    a = st.split()
    if len(a) > 10:
      if (a[0] == 'PLUGMAPOBJ') and (a[8] == 'MANGA'):
        survey.append(a[8])
        fiberid.append(int(a[25]))
        xp.append(float(a[22]))
        yp.append(float(a[23]))
  return survey,fiberid,xp,yp
#--


#--- MAIN ---
scale = 218.

desc = 'manga best fiber'
parser = argparse.ArgumentParser(description=desc)

parser.add_argument('-p', '--p', help='Plate, e.g. 7700',
    default=0, type=int)
parser.add_argument('-n', '--n', action="store_true", 
    help='Do not refresh plate files')

args = parser.parse_args()    

print
if args.p < 1:
  print 'Plate must be set'
  print 'Syntax: whichMangaFiber -p 7815 -n  (in most cases)'
  print '  or'
  print 'Syntax: whichMangaFiber -p 7815 '
else:
  print 'Input: plate =',args.p

  spl = str(args.p)
  if args.n == True:
    get_plates(spl)

  #plates = os.system('ls ' + w_dir + 'plPlugMapM-' + spl + '*.par')
  st2 = w_dir + 'plPlugMapM-' + spl + '*.par'

  plates = getFiles(st2)
  n_p = len(plates)
  if n_p > 0:
    par = plates[n_p -1 ]
    fil20 = par.split('/')
    fil2 = fil20[len(fil20) - 1]
    print 'Use file: ',fil2
    
    survey,fiberid,xp,yp = get_pars(par)

    xp = np.array(xp)
    yp = np.array(yp)
    fiberid = np.array(fiberid)
    #-d2 = np.sqrt(xp*xp + yp*yp)

    for i in xp:
      d2 = np.sqrt(xp*xp + yp*yp)
      imin=np.argmin(d2)
      inear = np.where( np.fabs(d2 - d2[imin]) < scale*60./3600.)
      if len(xp[inear]) < 70:
        xp = np.delete(xp, inear)
        yp = np.delete(yp, inear)
      else:
        break

    print '================='
    print 'The best fiber %d is at %6.2f arcmin (%6.3f of radius) from the center' % (fiberid[imin] , 60.*d2[imin]/scale, (d2[imin]/scale)/1.5 )
    print
    print 'Run your pointing command. Then run in STUI'
    print
    print 'guider starInFiber probe=%s' % fiberid[imin]
    print
  else:
    print 'ERROR: I cannot find downloaded par file. '
    print ' Try running me with -n  option'
    print ' Also, this plate MUST be in the plan for tonight'
    
# end
